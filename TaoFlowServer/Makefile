#############################################################################
# Makefile for building: TaoFlowServer
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Mon Nov 18 14:30:32 2013
# Project:  TaoFlowServer.pro
# Template: app
# Command: $(QMAKE) -o Makefile TaoFlowServer.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -fno-strict-aliasing  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -fno-strict-aliasing  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt-3.3/mkspecs/default -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ThreadPool.h \
		TaoFlowServer.h \
		PacketInfo.h \
		IOData.h \
		def.h \
		ClientInfo.h \
		MyFunc.h \
		wkmanager.h \
		cwktask.h
SOURCES = ThreadPool.cpp \
		TaoFlowServer.cpp \
		ServerMain.cpp \
		IOData.cpp \
		MyFunc.cpp \
		wkmanager.cpp \
		cwktask.cpp
OBJECTS = ThreadPool.o \
		TaoFlowServer.o \
		ServerMain.o \
		IOData.o \
		MyFunc.o \
		wkmanager.o \
		cwktask.o \
		mainwindow.o
FORMS = mainwindow.ui
UICDECLS = mainwindow.h
UICIMPLS = mainwindow.cpp
SRCMOC   = moc_wkmanager.cpp \
		moc_cwktask.cpp \
		moc_mainwindow.cpp
OBJMOC = moc_wkmanager.o \
		moc_cwktask.o \
		moc_mainwindow.o
DIST	   = TaoFlowServer.pro
QMAKE_TARGET = TaoFlowServer
DESTDIR  = 
TARGET   = TaoFlowServer

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: TaoFlowServer.pro  /usr/lib/qt-3.3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile TaoFlowServer.pro
qmake: 
	@$(QMAKE) -o Makefile TaoFlowServer.pro

dist: 
	@mkdir -p .tmp/TaoFlowServer && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/TaoFlowServer/ && ( cd `dirname .tmp/TaoFlowServer` && $(TAR) TaoFlowServer.tar TaoFlowServer && $(GZIP) TaoFlowServer.tar ) && $(MOVE) `dirname .tmp/TaoFlowServer`/TaoFlowServer.tar.gz . && $(DEL_FILE) -r .tmp/TaoFlowServer

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

ThreadPool.o: ThreadPool.cpp ThreadPool.h \
		def.h \
		IOData.h \
		ClientInfo.h \
		PacketInfo.h

TaoFlowServer.o: TaoFlowServer.cpp TaoFlowServer.h \
		def.h \
		ThreadPool.h \
		IOData.h \
		ClientInfo.h \
		PacketInfo.h

ServerMain.o: ServerMain.cpp TaoFlowServer.h \
		ThreadPool.h \
		wkmanager.h \
		def.h \
		IOData.h \
		ClientInfo.h \
		PacketInfo.h \
		cwktask.h \
		MyFunc.h

IOData.o: IOData.cpp IOData.h \
		def.h \
		PacketInfo.h \
		ClientInfo.h

MyFunc.o: MyFunc.cpp MyFunc.h

wkmanager.o: wkmanager.cpp wkmanager.h \
		cwktask.h \
		MyFunc.h

cwktask.o: cwktask.cpp 

mainwindow.h: mainwindow.ui 
	$(UIC) mainwindow.ui -o mainwindow.h

mainwindow.cpp: mainwindow.h mainwindow.ui 
	$(UIC) mainwindow.ui -i mainwindow.h -o mainwindow.cpp

mainwindow.o: mainwindow.cpp mainwindow.h

moc_wkmanager.o: moc_wkmanager.cpp  wkmanager.h cwktask.h \
		MyFunc.h

moc_cwktask.o: moc_cwktask.cpp  cwktask.h MyFunc.h

moc_mainwindow.o: moc_mainwindow.cpp  mainwindow.h 

moc_wkmanager.cpp: $(MOC) wkmanager.h
	$(MOC) wkmanager.h -o moc_wkmanager.cpp

moc_cwktask.cpp: $(MOC) cwktask.h
	$(MOC) cwktask.h -o moc_cwktask.cpp

moc_mainwindow.cpp: $(MOC) mainwindow.h
	$(MOC) mainwindow.h -o moc_mainwindow.cpp

####### Install

install:  

uninstall:  

